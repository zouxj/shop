apply plugin: 'com.android.application'

def packageTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    signingConfigs {
        release {
            keyAlias 'laikai'
            keyPassword 'android123'
            storeFile file('H:/AndroidProject/shenyuproject/kaika_word.jks')
            storePassword 'android123'

        }
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false

    }

    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.shenyu.laikaword"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 22
        versionName "1.3.3"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', "x86"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.shenyu.laikaword",
                JPUSH_APPKEY : "5ec20854bc921f45cf5dd784", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    flavorDimensions "laikashop"
    productFlavors {

        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
            dimension "laikashop"
        }
        anbei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "anbei"]
            dimension "laikashop"
        }

        androidgoin {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "androidgoin"]
            dimension "laikashop"
        }
        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
            dimension "laikashop"
        }
        vivo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vivo"]
            dimension "laikashop"
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
            dimension "laikashop"
        }
        s360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "s360"]
            dimension "laikashop"
        }
        oppo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "oppo"]
            dimension "laikashop"
        }
        ali {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "ali"]
            dimension "laikashop"
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
            dimension "laikashop"
        }
        chuizi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "chuizi"]
            dimension "laikashop"
        }
        shenyu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "shenyu"]
            dimension "laikashop"
        }
        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
            dimension "laikashop"
        }
        kuan {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "kuan"]
            dimension "laikashop"
        }
        lenovo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "lenovo"]
            dimension "laikashop"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                if (variant.buildType.name == "release") {
                    fileName = "app_v${defaultConfig.versionName}_${packageTime()}_${variant.productFlavors[0].name}_release.apk"
                } else if (variant.buildType.name == "debug") {
                    fileName = "app_v${defaultConfig.versionName}_${packageTime()}_${variant.productFlavors[0].name}_beta.apk"
                }
            }
            outputFileName = fileName
        }
    }

}
gradle.taskGraph.whenReady {
    tasks.each { task ->
        if (task.name.equals('mockableAndroidJar')) {
            task.enabled = false
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.0'
            }
        }
    }
}




dependencies {
    //noinspection GradleCompatible
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.jakewharton:butterknife:10.0.0'
    compile 'com.android.support:appcompat-v7:28.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    compile 'com.google.dagger:dagger:2.11'
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'
    implementation 'com.android.support:design:26.0.0'
    compile 'cn.jiguang.sdk:jpush:3.0.8'
    // 此处以JMessage 2.2.0 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.6'
    // 此处以JCore 1.1.3 版本为例。
    compile 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    compile 'com.aliyun.ams:alicloud-android-hotfix:3.0.9'
    compile 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation project(':paylibrary')
    implementation project(':utilslibrary')
    compile 'com.contrarywind:Android-PickerView:3.2.6'
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'
    compile 'com.leo618:MPermission:0.0.2'
    implementation files('libs/mta-sdk-1.6.2.jar')
    implementation files('libs/open_sdk_r5793.jar')
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.githang:status-bar-compat:0.6'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.0'
    compile 'com.aliyun.dpa:oss-android-sdk:2.4.3'
    implementation 'com.squareup.okio:okio:1.13.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation files('libs/umeng-common-1.4.0.jar')
    implementation files('libs/umeng-analytics-7.4.0.jar')
    implementation 'com.github.pinguo-zhouwei:MZBannerView:v2.0.2'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0@aar'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'

}
